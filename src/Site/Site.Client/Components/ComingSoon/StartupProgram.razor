@attribute [StreamRendering]
@rendermode InteractiveAuto

@if (CurrentState is not State.Running)
{
    <div class="history">
        <TerminalCommands Commands="Commands" OnComplete="OnCommandsCompleted" />

        @if (CurrentState is State.Building)
        {
            <p>Building...</p>
        }
    </div>
}
else
{
    <div style="transform-style: preserve-3d; perspective: 500px; height: 100%; position: relative;">
        <VaporwaveBackground />
        <div style="height: 100%; display: flex; align-items: center; justify-content: center; text-align: center;">
            <GlitchText Value="coming soon" />
        </div>
    </div>
}

@code {

    private string[] Commands { get; set; } = new[]
    {
        "cd source/repos",
        "git clone https://github.com/erinnmclaughlin/PersonalWebsite.git",
        "cd PersonalWebsite",
        "dotnet run"
    };

    private State CurrentState { get; set; } = State.EnteringCommands;

    private async Task OnCommandsCompleted()
    {
        CurrentState = State.Building;
        await Task.Delay(2000);

        CurrentState = State.Running;
    }

    enum State { EnteringCommands, Building, Running }
}
